/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Fragment: typeof import('react')['Fragment']
  const Icon: typeof import('@iconify/react')['Icon']
  const InfiniteQueryObserver: typeof import('@tanstack/react-query')['InfiniteQueryObserver']
  const Link: typeof import('@tanstack/react-router')['Link']
  const Outlet: typeof import('@tanstack/react-router')['Outlet']
  const QueriesObserver: typeof import('@tanstack/react-query')['QueriesObserver']
  const QueryErrorResetBoundary: typeof import('@tanstack/react-query')['QueryErrorResetBoundary']
  const QueryObserver: typeof import('@tanstack/react-query')['QueryObserver']
  const Suspense: typeof import('react')['Suspense']
  const atom: typeof import('jotai')['atom']
  const atomEffect: typeof import('jotai-effect')['atomEffect']
  const atomFamily: typeof import('jotai/utils')['atomFamily']
  const atomWithDefault: typeof import('jotai/utils')['atomWithDefault']
  const atomWithHash: typeof import('jotai/utils')['atomWithHash']
  const atomWithMutative: typeof import('jotai-mutative')['atomWithMutative']
  const atomWithObservable: typeof import('jotai/utils')['atomWithObservable']
  const atomWithReducer: typeof import('jotai/utils')['atomWithReducer']
  const atomWithReset: typeof import('jotai/utils')['atomWithReset']
  const atomWithStorage: typeof import('jotai/utils')['atomWithStorage']
  const clsx: typeof import('clsx')['clsx']
  const createContext: typeof import('react')['createContext']
  const createJSONStorage: typeof import('jotai/utils')['createJSONStorage']
  const createRef: typeof import('react')['createRef']
  const deepMemo: typeof import('@/utils/react/deepMemo')['default']
  const focusAtom: typeof import('jotai-optics')['focusAtom']
  const focusManager: typeof import('@tanstack/react-query')['focusManager']
  const forwardRef: typeof import('react')['forwardRef']
  const freezeAtom: typeof import('jotai/utils')['freezeAtom']
  const freezeAtomCreator: typeof import('jotai/utils')['freezeAtomCreator']
  const infiniteQueryOptions: typeof import('@tanstack/react-query')['infiniteQueryOptions']
  const invariant: typeof import('tiny-invariant')['default']
  const lazy: typeof import('react')['lazy']
  const loadable: typeof import('jotai/utils')['loadable']
  const memo: typeof import('react')['memo']
  const notifyManager: typeof import('@tanstack/react-query')['notifyManager']
  const onlineManager: typeof import('@tanstack/react-query')['onlineManager']
  const queryOptions: typeof import('@tanstack/react-query')['queryOptions']
  const selectAtom: typeof import('jotai/utils')['selectAtom']
  const skipToken: typeof import('@tanstack/react-query')['skipToken']
  const splitAtom: typeof import('jotai/utils')['splitAtom']
  const startTransition: typeof import('react')['startTransition']
  const use: typeof import('react')['use']
  const useAtom: typeof import('jotai')['useAtom']
  const useAtomCallback: typeof import('jotai/utils')['useAtomCallback']
  const useAtomValue: typeof import('jotai')['useAtomValue']
  const useAwaited: typeof import('@tanstack/react-router')['useAwaited']
  const useBlocker: typeof import('@tanstack/react-router')['useBlocker']
  const useCallback: typeof import('react')['useCallback']
  const useCanGoBack: typeof import('@tanstack/react-router')['useCanGoBack']
  const useChildMatches: typeof import('@tanstack/react-router')['useChildMatches']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useHydrateAtoms: typeof import('jotai/utils')['useHydrateAtoms']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInfiniteQuery: typeof import('@tanstack/react-query')['useInfiniteQuery']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useIsFetching: typeof import('@tanstack/react-query')['useIsFetching']
  const useIsMutating: typeof import('@tanstack/react-query')['useIsMutating']
  const useLatest: typeof import('react-use')['useLatest']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLinkProps: typeof import('@tanstack/react-router')['useLinkProps']
  const useLoaderData: typeof import('@tanstack/react-router')['useLoaderData']
  const useLoaderDeps: typeof import('@tanstack/react-router')['useLoaderDeps']
  const useLocation: typeof import('@tanstack/react-router')['useLocation']
  const useMatch: typeof import('@tanstack/react-router')['useMatch']
  const useMatchRoute: typeof import('@tanstack/react-router')['useMatchRoute']
  const useMatches: typeof import('@tanstack/react-router')['useMatches']
  const useMemo: typeof import('react')['useMemo']
  const useMutation: typeof import('@tanstack/react-query')['useMutation']
  const useMutationState: typeof import('@tanstack/react-query')['useMutationState']
  const useMutativeAtom: typeof import('jotai-mutative')['useMutativeAtom']
  const useNavigate: typeof import('@tanstack/react-router')['useNavigate']
  const useParams: typeof import('@tanstack/react-router')['useParams']
  const useParentMatches: typeof import('@tanstack/react-router')['useParentMatches']
  const usePrefetchInfiniteQuery: typeof import('@tanstack/react-query')['usePrefetchInfiniteQuery']
  const usePrefetchQuery: typeof import('@tanstack/react-query')['usePrefetchQuery']
  const useQueries: typeof import('@tanstack/react-query')['useQueries']
  const useQuery: typeof import('@tanstack/react-query')['useQuery']
  const useQueryClient: typeof import('@tanstack/react-query')['useQueryClient']
  const useQueryErrorResetBoundary: typeof import('@tanstack/react-query')['useQueryErrorResetBoundary']
  const useReducer: typeof import('react')['useReducer']
  const useReducerAtom: typeof import('jotai/utils')['useReducerAtom']
  const useRef: typeof import('react')['useRef']
  const useResetAtom: typeof import('jotai/utils')['useResetAtom']
  const useRouteContext: typeof import('@tanstack/react-router')['useRouteContext']
  const useRouter: typeof import('@tanstack/react-router')['useRouter']
  const useRouterState: typeof import('@tanstack/react-router')['useRouterState']
  const useSearch: typeof import('@tanstack/react-router')['useSearch']
  const useSetAtom: typeof import('jotai')['useSetAtom']
  const useState: typeof import('react')['useState']
  const useStore: typeof import('jotai')['useStore']
  const useSuspenseInfiniteQuery: typeof import('@tanstack/react-query')['useSuspenseInfiniteQuery']
  const useSuspenseQueries: typeof import('@tanstack/react-query')['useSuspenseQueries']
  const useSuspenseQuery: typeof import('@tanstack/react-query')['useSuspenseQuery']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useTranslation: typeof import('react-i18next')['useTranslation']
  const waitForAll: typeof import('jotai/utils')['waitForAll']
  const withMutative: typeof import('jotai-mutative')['withMutative']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { MemoizedCallback, MemoizedCallbackOrDispatch, SyntheticEvent, ReactEventHandler, UIEventHandler, MouseEventHandler, TouchEventHandler, PointerEventHandler, ChangeEventHandler, KeyboardEventHandler, FormEventHandler, ComponentProps, ComponentPropsWithRef, ComponentPropsWithoutRef, CustomComponentPropsWithRef, PropsWithoutRef, PropsWithChildren, ComponentRef, Ref, RefObject, RefCallback, Dispatch, SetStateAction, ReactNode, JSX, ComponentType, ElementType, ReactElement, CSSProperties } from 'react'
  import('react')
  // @ts-ignore
  export type { QueryClient, UseQueryResult } from '@tanstack/react-query'
  import('@tanstack/react-query')
}
